name: CI

on:
  #pull_request:
  #  branches: [ "main" ]
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
          
      - name: ServiceNow DevOps Register Artifact
        uses: ServiceNow/servicenow-devops-register-artifact@v3.1.0
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          job-name: ${{ github.job }}
          context-github: ${{ toJSON(github) }}
          artifacts: '[{"name": "KIRO-artifact", "version": "1.${{ github.run_number }}.0", "repositoryName": "${{ github.repository }}"}]'
  Package:
     needs: build
     runs-on: ubuntu-latest
     steps:
        - name: ServiceNow DevOps Register Package
          uses: ServiceNow/servicenow-devops-register-package@v3.1.0
          with:
            devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
            instance-url: ${{ secrets.SN_INSTANCE_URL }}
            tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            context-github: ${{ toJSON(github) }}
            artifacts: '[{"name": "KIRO-artifact", "version": "1.${{ github.run_number }}.0", "repositoryName": "${{ github.repository }}"}]'
            # Name of the Package that contains list of artifacts
            package-name: SamplePackage
            job-name: ${{ github.job }}

  changeStep: 
    needs: Package
    runs-on: ubuntu-latest
    steps:
     - name: ServiceNow DevOps Change Automation
       uses: ServiceNow/servicenow-devops-change@v5.1.0
       with:
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          job-name: ${{ github.job }}
          context-github: ${{ toJSON(github) }}

  deploy:
     needs: changeStep
     runs-on: ubuntu-latest
     steps:
         #shell: pwsh
       - name: Run a one-line script
         run : echo deployed!
         
  POSTdeploy:
     needs: deploy
     runs-on: ubuntu-latest
     steps:
         #shell: pwsh
       - name: Run a one-line script
         run : echo post deployment checks!
